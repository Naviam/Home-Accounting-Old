//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NBRBService.NBRBServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.nbrb.by/", ConfigurationName="NBRBServiceReference.ExRatesSoap")]
    public interface ExRatesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/CurrenciesRefDaily", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CurrenciesRefDaily();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/CurrenciesRefDaily", ReplyAction="*")]
        System.IAsyncResult BeginCurrenciesRefDaily(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndCurrenciesRefDaily(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/CurrenciesRefMonthly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CurrenciesRefMonthly();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/CurrenciesRefMonthly", ReplyAction="*")]
        System.IAsyncResult BeginCurrenciesRefMonthly(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndCurrenciesRefMonthly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/StartDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime StartDate(int Periodicity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/StartDate", ReplyAction="*")]
        System.IAsyncResult BeginStartDate(int Periodicity, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndStartDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/LastDailyExRatesDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime LastDailyExRatesDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/LastDailyExRatesDate", ReplyAction="*")]
        System.IAsyncResult BeginLastDailyExRatesDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndLastDailyExRatesDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/LastMonthlyExRatesDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime LastMonthlyExRatesDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/LastMonthlyExRatesDate", ReplyAction="*")]
        System.IAsyncResult BeginLastMonthlyExRatesDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndLastMonthlyExRatesDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/ExRatesDaily", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ExRatesDaily(System.DateTime onDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/ExRatesDaily", ReplyAction="*")]
        System.IAsyncResult BeginExRatesDaily(System.DateTime onDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndExRatesDaily(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/ExRatesMonthly", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ExRatesMonthly(System.DateTime onDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/ExRatesMonthly", ReplyAction="*")]
        System.IAsyncResult BeginExRatesMonthly(System.DateTime onDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndExRatesMonthly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/ExRatesDyn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ExRatesDyn(int curId, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/ExRatesDyn", ReplyAction="*")]
        System.IAsyncResult BeginExRatesDyn(int curId, System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndExRatesDyn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/CurrenciesRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CurrenciesRef(int Periodicity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/CurrenciesRef", ReplyAction="*")]
        System.IAsyncResult BeginCurrenciesRef(int Periodicity, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndCurrenciesRef(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/MetalsLastDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime MetalsLastDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/MetalsLastDate", ReplyAction="*")]
        System.IAsyncResult BeginMetalsLastDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndMetalsLastDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/MetalsRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MetalsRef();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/MetalsRef", ReplyAction="*")]
        System.IAsyncResult BeginMetalsRef(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndMetalsRef(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/MetalsPrices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MetalsPrices(int MetalId, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/MetalsPrices", ReplyAction="*")]
        System.IAsyncResult BeginMetalsPrices(int MetalId, System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndMetalsPrices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/IngotsPrices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet IngotsPrices(System.DateTime onDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/IngotsPrices", ReplyAction="*")]
        System.IAsyncResult BeginIngotsPrices(System.DateTime onDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndIngotsPrices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/IngotsLastDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime IngotsLastDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/IngotsLastDate", ReplyAction="*")]
        System.IAsyncResult BeginIngotsLastDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndIngotsLastDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/StockAddRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet StockAddRates(System.DateTime onDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/StockAddRates", ReplyAction="*")]
        System.IAsyncResult BeginStockAddRates(System.DateTime onDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndStockAddRates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.nbrb.by/StockAddRatesLastDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime StockAddRatesLastDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.nbrb.by/StockAddRatesLastDate", ReplyAction="*")]
        System.IAsyncResult BeginStockAddRatesLastDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndStockAddRatesLastDate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ExRatesSoapChannel : NBRBService.NBRBServiceReference.ExRatesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrenciesRefDailyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CurrenciesRefDailyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrenciesRefMonthlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CurrenciesRefMonthlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LastDailyExRatesDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LastDailyExRatesDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LastMonthlyExRatesDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LastMonthlyExRatesDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExRatesDailyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExRatesDailyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExRatesMonthlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExRatesMonthlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExRatesDynCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExRatesDynCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrenciesRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CurrenciesRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetalsLastDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetalsLastDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetalsRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetalsRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetalsPricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MetalsPricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IngotsPricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IngotsPricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IngotsLastDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IngotsLastDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockAddRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StockAddRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockAddRatesLastDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StockAddRatesLastDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExRatesSoapClient : System.ServiceModel.ClientBase<NBRBService.NBRBServiceReference.ExRatesSoap>, NBRBService.NBRBServiceReference.ExRatesSoap {
        
        private BeginOperationDelegate onBeginCurrenciesRefDailyDelegate;
        
        private EndOperationDelegate onEndCurrenciesRefDailyDelegate;
        
        private System.Threading.SendOrPostCallback onCurrenciesRefDailyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCurrenciesRefMonthlyDelegate;
        
        private EndOperationDelegate onEndCurrenciesRefMonthlyDelegate;
        
        private System.Threading.SendOrPostCallback onCurrenciesRefMonthlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartDateDelegate;
        
        private EndOperationDelegate onEndStartDateDelegate;
        
        private System.Threading.SendOrPostCallback onStartDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginLastDailyExRatesDateDelegate;
        
        private EndOperationDelegate onEndLastDailyExRatesDateDelegate;
        
        private System.Threading.SendOrPostCallback onLastDailyExRatesDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginLastMonthlyExRatesDateDelegate;
        
        private EndOperationDelegate onEndLastMonthlyExRatesDateDelegate;
        
        private System.Threading.SendOrPostCallback onLastMonthlyExRatesDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginExRatesDailyDelegate;
        
        private EndOperationDelegate onEndExRatesDailyDelegate;
        
        private System.Threading.SendOrPostCallback onExRatesDailyCompletedDelegate;
        
        private BeginOperationDelegate onBeginExRatesMonthlyDelegate;
        
        private EndOperationDelegate onEndExRatesMonthlyDelegate;
        
        private System.Threading.SendOrPostCallback onExRatesMonthlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginExRatesDynDelegate;
        
        private EndOperationDelegate onEndExRatesDynDelegate;
        
        private System.Threading.SendOrPostCallback onExRatesDynCompletedDelegate;
        
        private BeginOperationDelegate onBeginCurrenciesRefDelegate;
        
        private EndOperationDelegate onEndCurrenciesRefDelegate;
        
        private System.Threading.SendOrPostCallback onCurrenciesRefCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetalsLastDateDelegate;
        
        private EndOperationDelegate onEndMetalsLastDateDelegate;
        
        private System.Threading.SendOrPostCallback onMetalsLastDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetalsRefDelegate;
        
        private EndOperationDelegate onEndMetalsRefDelegate;
        
        private System.Threading.SendOrPostCallback onMetalsRefCompletedDelegate;
        
        private BeginOperationDelegate onBeginMetalsPricesDelegate;
        
        private EndOperationDelegate onEndMetalsPricesDelegate;
        
        private System.Threading.SendOrPostCallback onMetalsPricesCompletedDelegate;
        
        private BeginOperationDelegate onBeginIngotsPricesDelegate;
        
        private EndOperationDelegate onEndIngotsPricesDelegate;
        
        private System.Threading.SendOrPostCallback onIngotsPricesCompletedDelegate;
        
        private BeginOperationDelegate onBeginIngotsLastDateDelegate;
        
        private EndOperationDelegate onEndIngotsLastDateDelegate;
        
        private System.Threading.SendOrPostCallback onIngotsLastDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginStockAddRatesDelegate;
        
        private EndOperationDelegate onEndStockAddRatesDelegate;
        
        private System.Threading.SendOrPostCallback onStockAddRatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginStockAddRatesLastDateDelegate;
        
        private EndOperationDelegate onEndStockAddRatesLastDateDelegate;
        
        private System.Threading.SendOrPostCallback onStockAddRatesLastDateCompletedDelegate;
        
        public ExRatesSoapClient() {
        }
        
        public ExRatesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExRatesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExRatesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExRatesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CurrenciesRefDailyCompletedEventArgs> CurrenciesRefDailyCompleted;
        
        public event System.EventHandler<CurrenciesRefMonthlyCompletedEventArgs> CurrenciesRefMonthlyCompleted;
        
        public event System.EventHandler<StartDateCompletedEventArgs> StartDateCompleted;
        
        public event System.EventHandler<LastDailyExRatesDateCompletedEventArgs> LastDailyExRatesDateCompleted;
        
        public event System.EventHandler<LastMonthlyExRatesDateCompletedEventArgs> LastMonthlyExRatesDateCompleted;
        
        public event System.EventHandler<ExRatesDailyCompletedEventArgs> ExRatesDailyCompleted;
        
        public event System.EventHandler<ExRatesMonthlyCompletedEventArgs> ExRatesMonthlyCompleted;
        
        public event System.EventHandler<ExRatesDynCompletedEventArgs> ExRatesDynCompleted;
        
        public event System.EventHandler<CurrenciesRefCompletedEventArgs> CurrenciesRefCompleted;
        
        public event System.EventHandler<MetalsLastDateCompletedEventArgs> MetalsLastDateCompleted;
        
        public event System.EventHandler<MetalsRefCompletedEventArgs> MetalsRefCompleted;
        
        public event System.EventHandler<MetalsPricesCompletedEventArgs> MetalsPricesCompleted;
        
        public event System.EventHandler<IngotsPricesCompletedEventArgs> IngotsPricesCompleted;
        
        public event System.EventHandler<IngotsLastDateCompletedEventArgs> IngotsLastDateCompleted;
        
        public event System.EventHandler<StockAddRatesCompletedEventArgs> StockAddRatesCompleted;
        
        public event System.EventHandler<StockAddRatesLastDateCompletedEventArgs> StockAddRatesLastDateCompleted;
        
        public System.Data.DataSet CurrenciesRefDaily() {
            return base.Channel.CurrenciesRefDaily();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCurrenciesRefDaily(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrenciesRefDaily(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndCurrenciesRefDaily(System.IAsyncResult result) {
            return base.Channel.EndCurrenciesRefDaily(result);
        }
        
        private System.IAsyncResult OnBeginCurrenciesRefDaily(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCurrenciesRefDaily(callback, asyncState);
        }
        
        private object[] OnEndCurrenciesRefDaily(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndCurrenciesRefDaily(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCurrenciesRefDailyCompleted(object state) {
            if ((this.CurrenciesRefDailyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CurrenciesRefDailyCompleted(this, new CurrenciesRefDailyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CurrenciesRefDailyAsync() {
            this.CurrenciesRefDailyAsync(null);
        }
        
        public void CurrenciesRefDailyAsync(object userState) {
            if ((this.onBeginCurrenciesRefDailyDelegate == null)) {
                this.onBeginCurrenciesRefDailyDelegate = new BeginOperationDelegate(this.OnBeginCurrenciesRefDaily);
            }
            if ((this.onEndCurrenciesRefDailyDelegate == null)) {
                this.onEndCurrenciesRefDailyDelegate = new EndOperationDelegate(this.OnEndCurrenciesRefDaily);
            }
            if ((this.onCurrenciesRefDailyCompletedDelegate == null)) {
                this.onCurrenciesRefDailyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrenciesRefDailyCompleted);
            }
            base.InvokeAsync(this.onBeginCurrenciesRefDailyDelegate, null, this.onEndCurrenciesRefDailyDelegate, this.onCurrenciesRefDailyCompletedDelegate, userState);
        }
        
        public System.Data.DataSet CurrenciesRefMonthly() {
            return base.Channel.CurrenciesRefMonthly();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCurrenciesRefMonthly(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrenciesRefMonthly(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndCurrenciesRefMonthly(System.IAsyncResult result) {
            return base.Channel.EndCurrenciesRefMonthly(result);
        }
        
        private System.IAsyncResult OnBeginCurrenciesRefMonthly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCurrenciesRefMonthly(callback, asyncState);
        }
        
        private object[] OnEndCurrenciesRefMonthly(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndCurrenciesRefMonthly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCurrenciesRefMonthlyCompleted(object state) {
            if ((this.CurrenciesRefMonthlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CurrenciesRefMonthlyCompleted(this, new CurrenciesRefMonthlyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CurrenciesRefMonthlyAsync() {
            this.CurrenciesRefMonthlyAsync(null);
        }
        
        public void CurrenciesRefMonthlyAsync(object userState) {
            if ((this.onBeginCurrenciesRefMonthlyDelegate == null)) {
                this.onBeginCurrenciesRefMonthlyDelegate = new BeginOperationDelegate(this.OnBeginCurrenciesRefMonthly);
            }
            if ((this.onEndCurrenciesRefMonthlyDelegate == null)) {
                this.onEndCurrenciesRefMonthlyDelegate = new EndOperationDelegate(this.OnEndCurrenciesRefMonthly);
            }
            if ((this.onCurrenciesRefMonthlyCompletedDelegate == null)) {
                this.onCurrenciesRefMonthlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrenciesRefMonthlyCompleted);
            }
            base.InvokeAsync(this.onBeginCurrenciesRefMonthlyDelegate, null, this.onEndCurrenciesRefMonthlyDelegate, this.onCurrenciesRefMonthlyCompletedDelegate, userState);
        }
        
        public System.DateTime StartDate(int Periodicity) {
            return base.Channel.StartDate(Periodicity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStartDate(int Periodicity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartDate(Periodicity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndStartDate(System.IAsyncResult result) {
            return base.Channel.EndStartDate(result);
        }
        
        private System.IAsyncResult OnBeginStartDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Periodicity = ((int)(inValues[0]));
            return this.BeginStartDate(Periodicity, callback, asyncState);
        }
        
        private object[] OnEndStartDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndStartDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStartDateCompleted(object state) {
            if ((this.StartDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartDateCompleted(this, new StartDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartDateAsync(int Periodicity) {
            this.StartDateAsync(Periodicity, null);
        }
        
        public void StartDateAsync(int Periodicity, object userState) {
            if ((this.onBeginStartDateDelegate == null)) {
                this.onBeginStartDateDelegate = new BeginOperationDelegate(this.OnBeginStartDate);
            }
            if ((this.onEndStartDateDelegate == null)) {
                this.onEndStartDateDelegate = new EndOperationDelegate(this.OnEndStartDate);
            }
            if ((this.onStartDateCompletedDelegate == null)) {
                this.onStartDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartDateCompleted);
            }
            base.InvokeAsync(this.onBeginStartDateDelegate, new object[] {
                        Periodicity}, this.onEndStartDateDelegate, this.onStartDateCompletedDelegate, userState);
        }
        
        public System.DateTime LastDailyExRatesDate() {
            return base.Channel.LastDailyExRatesDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLastDailyExRatesDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLastDailyExRatesDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndLastDailyExRatesDate(System.IAsyncResult result) {
            return base.Channel.EndLastDailyExRatesDate(result);
        }
        
        private System.IAsyncResult OnBeginLastDailyExRatesDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLastDailyExRatesDate(callback, asyncState);
        }
        
        private object[] OnEndLastDailyExRatesDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndLastDailyExRatesDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLastDailyExRatesDateCompleted(object state) {
            if ((this.LastDailyExRatesDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LastDailyExRatesDateCompleted(this, new LastDailyExRatesDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LastDailyExRatesDateAsync() {
            this.LastDailyExRatesDateAsync(null);
        }
        
        public void LastDailyExRatesDateAsync(object userState) {
            if ((this.onBeginLastDailyExRatesDateDelegate == null)) {
                this.onBeginLastDailyExRatesDateDelegate = new BeginOperationDelegate(this.OnBeginLastDailyExRatesDate);
            }
            if ((this.onEndLastDailyExRatesDateDelegate == null)) {
                this.onEndLastDailyExRatesDateDelegate = new EndOperationDelegate(this.OnEndLastDailyExRatesDate);
            }
            if ((this.onLastDailyExRatesDateCompletedDelegate == null)) {
                this.onLastDailyExRatesDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLastDailyExRatesDateCompleted);
            }
            base.InvokeAsync(this.onBeginLastDailyExRatesDateDelegate, null, this.onEndLastDailyExRatesDateDelegate, this.onLastDailyExRatesDateCompletedDelegate, userState);
        }
        
        public System.DateTime LastMonthlyExRatesDate() {
            return base.Channel.LastMonthlyExRatesDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLastMonthlyExRatesDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLastMonthlyExRatesDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndLastMonthlyExRatesDate(System.IAsyncResult result) {
            return base.Channel.EndLastMonthlyExRatesDate(result);
        }
        
        private System.IAsyncResult OnBeginLastMonthlyExRatesDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLastMonthlyExRatesDate(callback, asyncState);
        }
        
        private object[] OnEndLastMonthlyExRatesDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndLastMonthlyExRatesDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLastMonthlyExRatesDateCompleted(object state) {
            if ((this.LastMonthlyExRatesDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LastMonthlyExRatesDateCompleted(this, new LastMonthlyExRatesDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LastMonthlyExRatesDateAsync() {
            this.LastMonthlyExRatesDateAsync(null);
        }
        
        public void LastMonthlyExRatesDateAsync(object userState) {
            if ((this.onBeginLastMonthlyExRatesDateDelegate == null)) {
                this.onBeginLastMonthlyExRatesDateDelegate = new BeginOperationDelegate(this.OnBeginLastMonthlyExRatesDate);
            }
            if ((this.onEndLastMonthlyExRatesDateDelegate == null)) {
                this.onEndLastMonthlyExRatesDateDelegate = new EndOperationDelegate(this.OnEndLastMonthlyExRatesDate);
            }
            if ((this.onLastMonthlyExRatesDateCompletedDelegate == null)) {
                this.onLastMonthlyExRatesDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLastMonthlyExRatesDateCompleted);
            }
            base.InvokeAsync(this.onBeginLastMonthlyExRatesDateDelegate, null, this.onEndLastMonthlyExRatesDateDelegate, this.onLastMonthlyExRatesDateCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ExRatesDaily(System.DateTime onDate) {
            return base.Channel.ExRatesDaily(onDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExRatesDaily(System.DateTime onDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExRatesDaily(onDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndExRatesDaily(System.IAsyncResult result) {
            return base.Channel.EndExRatesDaily(result);
        }
        
        private System.IAsyncResult OnBeginExRatesDaily(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime onDate = ((System.DateTime)(inValues[0]));
            return this.BeginExRatesDaily(onDate, callback, asyncState);
        }
        
        private object[] OnEndExRatesDaily(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndExRatesDaily(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExRatesDailyCompleted(object state) {
            if ((this.ExRatesDailyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExRatesDailyCompleted(this, new ExRatesDailyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExRatesDailyAsync(System.DateTime onDate) {
            this.ExRatesDailyAsync(onDate, null);
        }
        
        public void ExRatesDailyAsync(System.DateTime onDate, object userState) {
            if ((this.onBeginExRatesDailyDelegate == null)) {
                this.onBeginExRatesDailyDelegate = new BeginOperationDelegate(this.OnBeginExRatesDaily);
            }
            if ((this.onEndExRatesDailyDelegate == null)) {
                this.onEndExRatesDailyDelegate = new EndOperationDelegate(this.OnEndExRatesDaily);
            }
            if ((this.onExRatesDailyCompletedDelegate == null)) {
                this.onExRatesDailyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExRatesDailyCompleted);
            }
            base.InvokeAsync(this.onBeginExRatesDailyDelegate, new object[] {
                        onDate}, this.onEndExRatesDailyDelegate, this.onExRatesDailyCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ExRatesMonthly(System.DateTime onDate) {
            return base.Channel.ExRatesMonthly(onDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExRatesMonthly(System.DateTime onDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExRatesMonthly(onDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndExRatesMonthly(System.IAsyncResult result) {
            return base.Channel.EndExRatesMonthly(result);
        }
        
        private System.IAsyncResult OnBeginExRatesMonthly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime onDate = ((System.DateTime)(inValues[0]));
            return this.BeginExRatesMonthly(onDate, callback, asyncState);
        }
        
        private object[] OnEndExRatesMonthly(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndExRatesMonthly(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExRatesMonthlyCompleted(object state) {
            if ((this.ExRatesMonthlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExRatesMonthlyCompleted(this, new ExRatesMonthlyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExRatesMonthlyAsync(System.DateTime onDate) {
            this.ExRatesMonthlyAsync(onDate, null);
        }
        
        public void ExRatesMonthlyAsync(System.DateTime onDate, object userState) {
            if ((this.onBeginExRatesMonthlyDelegate == null)) {
                this.onBeginExRatesMonthlyDelegate = new BeginOperationDelegate(this.OnBeginExRatesMonthly);
            }
            if ((this.onEndExRatesMonthlyDelegate == null)) {
                this.onEndExRatesMonthlyDelegate = new EndOperationDelegate(this.OnEndExRatesMonthly);
            }
            if ((this.onExRatesMonthlyCompletedDelegate == null)) {
                this.onExRatesMonthlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExRatesMonthlyCompleted);
            }
            base.InvokeAsync(this.onBeginExRatesMonthlyDelegate, new object[] {
                        onDate}, this.onEndExRatesMonthlyDelegate, this.onExRatesMonthlyCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ExRatesDyn(int curId, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.ExRatesDyn(curId, fromDate, toDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExRatesDyn(int curId, System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExRatesDyn(curId, fromDate, toDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndExRatesDyn(System.IAsyncResult result) {
            return base.Channel.EndExRatesDyn(result);
        }
        
        private System.IAsyncResult OnBeginExRatesDyn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int curId = ((int)(inValues[0]));
            System.DateTime fromDate = ((System.DateTime)(inValues[1]));
            System.DateTime toDate = ((System.DateTime)(inValues[2]));
            return this.BeginExRatesDyn(curId, fromDate, toDate, callback, asyncState);
        }
        
        private object[] OnEndExRatesDyn(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndExRatesDyn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExRatesDynCompleted(object state) {
            if ((this.ExRatesDynCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExRatesDynCompleted(this, new ExRatesDynCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExRatesDynAsync(int curId, System.DateTime fromDate, System.DateTime toDate) {
            this.ExRatesDynAsync(curId, fromDate, toDate, null);
        }
        
        public void ExRatesDynAsync(int curId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.onBeginExRatesDynDelegate == null)) {
                this.onBeginExRatesDynDelegate = new BeginOperationDelegate(this.OnBeginExRatesDyn);
            }
            if ((this.onEndExRatesDynDelegate == null)) {
                this.onEndExRatesDynDelegate = new EndOperationDelegate(this.OnEndExRatesDyn);
            }
            if ((this.onExRatesDynCompletedDelegate == null)) {
                this.onExRatesDynCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExRatesDynCompleted);
            }
            base.InvokeAsync(this.onBeginExRatesDynDelegate, new object[] {
                        curId,
                        fromDate,
                        toDate}, this.onEndExRatesDynDelegate, this.onExRatesDynCompletedDelegate, userState);
        }
        
        public System.Data.DataSet CurrenciesRef(int Periodicity) {
            return base.Channel.CurrenciesRef(Periodicity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCurrenciesRef(int Periodicity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrenciesRef(Periodicity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndCurrenciesRef(System.IAsyncResult result) {
            return base.Channel.EndCurrenciesRef(result);
        }
        
        private System.IAsyncResult OnBeginCurrenciesRef(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Periodicity = ((int)(inValues[0]));
            return this.BeginCurrenciesRef(Periodicity, callback, asyncState);
        }
        
        private object[] OnEndCurrenciesRef(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndCurrenciesRef(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCurrenciesRefCompleted(object state) {
            if ((this.CurrenciesRefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CurrenciesRefCompleted(this, new CurrenciesRefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CurrenciesRefAsync(int Periodicity) {
            this.CurrenciesRefAsync(Periodicity, null);
        }
        
        public void CurrenciesRefAsync(int Periodicity, object userState) {
            if ((this.onBeginCurrenciesRefDelegate == null)) {
                this.onBeginCurrenciesRefDelegate = new BeginOperationDelegate(this.OnBeginCurrenciesRef);
            }
            if ((this.onEndCurrenciesRefDelegate == null)) {
                this.onEndCurrenciesRefDelegate = new EndOperationDelegate(this.OnEndCurrenciesRef);
            }
            if ((this.onCurrenciesRefCompletedDelegate == null)) {
                this.onCurrenciesRefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrenciesRefCompleted);
            }
            base.InvokeAsync(this.onBeginCurrenciesRefDelegate, new object[] {
                        Periodicity}, this.onEndCurrenciesRefDelegate, this.onCurrenciesRefCompletedDelegate, userState);
        }
        
        public System.DateTime MetalsLastDate() {
            return base.Channel.MetalsLastDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMetalsLastDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetalsLastDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndMetalsLastDate(System.IAsyncResult result) {
            return base.Channel.EndMetalsLastDate(result);
        }
        
        private System.IAsyncResult OnBeginMetalsLastDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMetalsLastDate(callback, asyncState);
        }
        
        private object[] OnEndMetalsLastDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndMetalsLastDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetalsLastDateCompleted(object state) {
            if ((this.MetalsLastDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetalsLastDateCompleted(this, new MetalsLastDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetalsLastDateAsync() {
            this.MetalsLastDateAsync(null);
        }
        
        public void MetalsLastDateAsync(object userState) {
            if ((this.onBeginMetalsLastDateDelegate == null)) {
                this.onBeginMetalsLastDateDelegate = new BeginOperationDelegate(this.OnBeginMetalsLastDate);
            }
            if ((this.onEndMetalsLastDateDelegate == null)) {
                this.onEndMetalsLastDateDelegate = new EndOperationDelegate(this.OnEndMetalsLastDate);
            }
            if ((this.onMetalsLastDateCompletedDelegate == null)) {
                this.onMetalsLastDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetalsLastDateCompleted);
            }
            base.InvokeAsync(this.onBeginMetalsLastDateDelegate, null, this.onEndMetalsLastDateDelegate, this.onMetalsLastDateCompletedDelegate, userState);
        }
        
        public System.Data.DataSet MetalsRef() {
            return base.Channel.MetalsRef();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMetalsRef(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetalsRef(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndMetalsRef(System.IAsyncResult result) {
            return base.Channel.EndMetalsRef(result);
        }
        
        private System.IAsyncResult OnBeginMetalsRef(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMetalsRef(callback, asyncState);
        }
        
        private object[] OnEndMetalsRef(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndMetalsRef(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetalsRefCompleted(object state) {
            if ((this.MetalsRefCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetalsRefCompleted(this, new MetalsRefCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetalsRefAsync() {
            this.MetalsRefAsync(null);
        }
        
        public void MetalsRefAsync(object userState) {
            if ((this.onBeginMetalsRefDelegate == null)) {
                this.onBeginMetalsRefDelegate = new BeginOperationDelegate(this.OnBeginMetalsRef);
            }
            if ((this.onEndMetalsRefDelegate == null)) {
                this.onEndMetalsRefDelegate = new EndOperationDelegate(this.OnEndMetalsRef);
            }
            if ((this.onMetalsRefCompletedDelegate == null)) {
                this.onMetalsRefCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetalsRefCompleted);
            }
            base.InvokeAsync(this.onBeginMetalsRefDelegate, null, this.onEndMetalsRefDelegate, this.onMetalsRefCompletedDelegate, userState);
        }
        
        public System.Data.DataSet MetalsPrices(int MetalId, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.MetalsPrices(MetalId, fromDate, toDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMetalsPrices(int MetalId, System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMetalsPrices(MetalId, fromDate, toDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndMetalsPrices(System.IAsyncResult result) {
            return base.Channel.EndMetalsPrices(result);
        }
        
        private System.IAsyncResult OnBeginMetalsPrices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int MetalId = ((int)(inValues[0]));
            System.DateTime fromDate = ((System.DateTime)(inValues[1]));
            System.DateTime toDate = ((System.DateTime)(inValues[2]));
            return this.BeginMetalsPrices(MetalId, fromDate, toDate, callback, asyncState);
        }
        
        private object[] OnEndMetalsPrices(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndMetalsPrices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMetalsPricesCompleted(object state) {
            if ((this.MetalsPricesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MetalsPricesCompleted(this, new MetalsPricesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MetalsPricesAsync(int MetalId, System.DateTime fromDate, System.DateTime toDate) {
            this.MetalsPricesAsync(MetalId, fromDate, toDate, null);
        }
        
        public void MetalsPricesAsync(int MetalId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.onBeginMetalsPricesDelegate == null)) {
                this.onBeginMetalsPricesDelegate = new BeginOperationDelegate(this.OnBeginMetalsPrices);
            }
            if ((this.onEndMetalsPricesDelegate == null)) {
                this.onEndMetalsPricesDelegate = new EndOperationDelegate(this.OnEndMetalsPrices);
            }
            if ((this.onMetalsPricesCompletedDelegate == null)) {
                this.onMetalsPricesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMetalsPricesCompleted);
            }
            base.InvokeAsync(this.onBeginMetalsPricesDelegate, new object[] {
                        MetalId,
                        fromDate,
                        toDate}, this.onEndMetalsPricesDelegate, this.onMetalsPricesCompletedDelegate, userState);
        }
        
        public System.Data.DataSet IngotsPrices(System.DateTime onDate) {
            return base.Channel.IngotsPrices(onDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIngotsPrices(System.DateTime onDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIngotsPrices(onDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndIngotsPrices(System.IAsyncResult result) {
            return base.Channel.EndIngotsPrices(result);
        }
        
        private System.IAsyncResult OnBeginIngotsPrices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime onDate = ((System.DateTime)(inValues[0]));
            return this.BeginIngotsPrices(onDate, callback, asyncState);
        }
        
        private object[] OnEndIngotsPrices(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndIngotsPrices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIngotsPricesCompleted(object state) {
            if ((this.IngotsPricesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IngotsPricesCompleted(this, new IngotsPricesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IngotsPricesAsync(System.DateTime onDate) {
            this.IngotsPricesAsync(onDate, null);
        }
        
        public void IngotsPricesAsync(System.DateTime onDate, object userState) {
            if ((this.onBeginIngotsPricesDelegate == null)) {
                this.onBeginIngotsPricesDelegate = new BeginOperationDelegate(this.OnBeginIngotsPrices);
            }
            if ((this.onEndIngotsPricesDelegate == null)) {
                this.onEndIngotsPricesDelegate = new EndOperationDelegate(this.OnEndIngotsPrices);
            }
            if ((this.onIngotsPricesCompletedDelegate == null)) {
                this.onIngotsPricesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIngotsPricesCompleted);
            }
            base.InvokeAsync(this.onBeginIngotsPricesDelegate, new object[] {
                        onDate}, this.onEndIngotsPricesDelegate, this.onIngotsPricesCompletedDelegate, userState);
        }
        
        public System.DateTime IngotsLastDate() {
            return base.Channel.IngotsLastDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIngotsLastDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIngotsLastDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndIngotsLastDate(System.IAsyncResult result) {
            return base.Channel.EndIngotsLastDate(result);
        }
        
        private System.IAsyncResult OnBeginIngotsLastDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginIngotsLastDate(callback, asyncState);
        }
        
        private object[] OnEndIngotsLastDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndIngotsLastDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIngotsLastDateCompleted(object state) {
            if ((this.IngotsLastDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IngotsLastDateCompleted(this, new IngotsLastDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IngotsLastDateAsync() {
            this.IngotsLastDateAsync(null);
        }
        
        public void IngotsLastDateAsync(object userState) {
            if ((this.onBeginIngotsLastDateDelegate == null)) {
                this.onBeginIngotsLastDateDelegate = new BeginOperationDelegate(this.OnBeginIngotsLastDate);
            }
            if ((this.onEndIngotsLastDateDelegate == null)) {
                this.onEndIngotsLastDateDelegate = new EndOperationDelegate(this.OnEndIngotsLastDate);
            }
            if ((this.onIngotsLastDateCompletedDelegate == null)) {
                this.onIngotsLastDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIngotsLastDateCompleted);
            }
            base.InvokeAsync(this.onBeginIngotsLastDateDelegate, null, this.onEndIngotsLastDateDelegate, this.onIngotsLastDateCompletedDelegate, userState);
        }
        
        public System.Data.DataSet StockAddRates(System.DateTime onDate) {
            return base.Channel.StockAddRates(onDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStockAddRates(System.DateTime onDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStockAddRates(onDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndStockAddRates(System.IAsyncResult result) {
            return base.Channel.EndStockAddRates(result);
        }
        
        private System.IAsyncResult OnBeginStockAddRates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime onDate = ((System.DateTime)(inValues[0]));
            return this.BeginStockAddRates(onDate, callback, asyncState);
        }
        
        private object[] OnEndStockAddRates(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndStockAddRates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStockAddRatesCompleted(object state) {
            if ((this.StockAddRatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StockAddRatesCompleted(this, new StockAddRatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StockAddRatesAsync(System.DateTime onDate) {
            this.StockAddRatesAsync(onDate, null);
        }
        
        public void StockAddRatesAsync(System.DateTime onDate, object userState) {
            if ((this.onBeginStockAddRatesDelegate == null)) {
                this.onBeginStockAddRatesDelegate = new BeginOperationDelegate(this.OnBeginStockAddRates);
            }
            if ((this.onEndStockAddRatesDelegate == null)) {
                this.onEndStockAddRatesDelegate = new EndOperationDelegate(this.OnEndStockAddRates);
            }
            if ((this.onStockAddRatesCompletedDelegate == null)) {
                this.onStockAddRatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStockAddRatesCompleted);
            }
            base.InvokeAsync(this.onBeginStockAddRatesDelegate, new object[] {
                        onDate}, this.onEndStockAddRatesDelegate, this.onStockAddRatesCompletedDelegate, userState);
        }
        
        public System.DateTime StockAddRatesLastDate() {
            return base.Channel.StockAddRatesLastDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStockAddRatesLastDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStockAddRatesLastDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndStockAddRatesLastDate(System.IAsyncResult result) {
            return base.Channel.EndStockAddRatesLastDate(result);
        }
        
        private System.IAsyncResult OnBeginStockAddRatesLastDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginStockAddRatesLastDate(callback, asyncState);
        }
        
        private object[] OnEndStockAddRatesLastDate(System.IAsyncResult result) {
            System.DateTime retVal = this.EndStockAddRatesLastDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStockAddRatesLastDateCompleted(object state) {
            if ((this.StockAddRatesLastDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StockAddRatesLastDateCompleted(this, new StockAddRatesLastDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StockAddRatesLastDateAsync() {
            this.StockAddRatesLastDateAsync(null);
        }
        
        public void StockAddRatesLastDateAsync(object userState) {
            if ((this.onBeginStockAddRatesLastDateDelegate == null)) {
                this.onBeginStockAddRatesLastDateDelegate = new BeginOperationDelegate(this.OnBeginStockAddRatesLastDate);
            }
            if ((this.onEndStockAddRatesLastDateDelegate == null)) {
                this.onEndStockAddRatesLastDateDelegate = new EndOperationDelegate(this.OnEndStockAddRatesLastDate);
            }
            if ((this.onStockAddRatesLastDateCompletedDelegate == null)) {
                this.onStockAddRatesLastDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStockAddRatesLastDateCompleted);
            }
            base.InvokeAsync(this.onBeginStockAddRatesLastDateDelegate, null, this.onEndStockAddRatesLastDateDelegate, this.onStockAddRatesLastDateCompletedDelegate, userState);
        }
    }
}
